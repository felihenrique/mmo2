Como lidarei com o problema do broadcast para players em excesso
scheduler:
- responsável por criar novas salas de jogo
- cada sala será um container docker
- players numa mesma party só podem entrar na mesma sala
- para salas do tipo shard (mapas do jogo), há um limite de jogadores (inicialmente 50)
- quando um jogador tenta entrar no shard e ele atingiu o limite de jogadores, um novo shard
é criado e o jogador é autorizado a entrar nesse

shard: 
- Haverá um novo serviço chamado scheduler
- Ele será responsável pela troca de players entre regiões
- O jogador pedirá entrar na região x
- O scheduler verificará o tamanho da party. Caso a capacidade atual 

FAZENDO: escrever e ler o tamanho da mensagem

TODO: lista de espera para acessar mundo, com prioridade 
TODO: desconectar player por inatividade
TODO: calcular automaticamente o ping de cada jogador 
TODO: add a opção de adicionar um authenticator para as conexões
  O authenticator será uma interface com a função Authenticate. O pacote gsp
  terá uma função para criar um authenticator baseado em um ip range.
  - Para serviços internos o remote ip precisa estar no range da rede
  - Para conexões externas (players), será preciso verificar no auth server
    se o jogador está autenticado. 
TODO: implementar o sistema de permissões baseado em hierarquia. Por exemplo,
      os jogadores tem permissões x, o community manager tem x + y, o admin x + y + z
TODO: pesquisar sobre social aspect games. algo que trouxe muitas reclamações no hearthwood
TODO: começar a implementar a movimentação dos personagens
TODO: disconnectar o client em caso de flood de pacotes
TODO: decidir o que fazer quando o packet tem outra struct dentro

- Eventos (por ex. jogador conectado, jogador desconectado, jogador no campo de visao, jogador)
  - Ack Input
  - Input Move
  - Jogador conectado
  - Jogador desconectado
  - Jogador movimentou
  - Jogador iniciou cast skill
  - Jogador finalizou cast skill
  - Jogador recebeu dano
  - 

tipos suportados:
bool, int8, uint8, int16, uint16, int32, uint32, int64, uint64, float32, float64

ONDE PAREI: Estava escrevendo o client-shard para simular movimento de multiplos jogadores.